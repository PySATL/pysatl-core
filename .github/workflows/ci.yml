name: CI

on:
  push:
  pull_request:

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12", "3.13"]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: "1.8.3"
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache pip wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/Library/Caches/pip
            ~\AppData\Local\pip\Cache
          key: pip-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
            pip-${{ runner.os }}-

      - name: Install dependencies (with dev)
        run: poetry install --with dev --no-interaction

      - name: Pre-commit (all files)
        run: poetry run pre-commit run --all-files

      - name: Ruff (lint)
        run: poetry run ruff check .

      - name: Ruff (format check)
        run: poetry run ruff format --check .

      - name: Mypy
        run: poetry run mypy src

      - name: Pytest
        run: poetry run pytest --cov

      - name: Coverage XML (artifact)
        run: poetry run coverage xml -o coverage.xml

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-py${{ matrix.python-version }}
          path: coverage.xml
